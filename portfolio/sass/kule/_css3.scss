$vendors: -webkit-, -moz-, -ms-, -o-, '';

//Align
//====================================================================
@mixin align-content($align: stretch) {
    -ms-flex-line-pack: $align;
    $vendors: -ms-flex-, -webkit-, '';
    @include _prefix(align-content, $align, $vendors);
}

@mixin align-items($align: stretch) {
    $vendors: -webkit-box-, -moz-box-, -ms-flex-;
    @include _prefix(align, $align, $vendors);

    $vendors: -ms-flex-, -webkit-, '';
    @include _prefix(align-items, $align, $vendors);
}

@mixin align-self($align: auto) {
    -ms-flex-item-align: $align;
    $vendors: -ms-flex-, -webkit-, '';
    @include _prefix(align-self, $align, $vendors);
}
//====================================================================



//Animations
//====================================================================
@mixin animation($values...) {
    @if length($values) == 0 {
        $values: none 0 ease 0 1 normal none running;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation, $values, $vendors);
}

@mixin animation-delay($values...) {
    @if length($values) == 0 {
        $values: 0s;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-delay, $values, $vendors);
}

@mixin animation-direction($values...) {
    @if length($values) == 0 {
        $values: normal;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-direction, $values, $vendors);
}

@mixin animation-duration($values...) {
    @if length($values) == 0 {
        $values: 0;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-duration, $values, $vendors);
}

@mixin animation-fill-mode($values...) {
    @if length($values) == 0 {
        $values: none;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-fill-mode, $values, $vendors);
}

@mixin animation-iteration-count($values...) {
    @if length($values) == 0 {
        $values: 1;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-iteration-count, $values, $vendors);
}

@mixin animation-name($values...) {
    @if length($values) == 0 {
        $values: none;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-name, $values, $vendors);
}

@mixin animation-play-state($values...) {
    @if length($values) == 0 {
        $values: running;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-play-state, $values, $vendors);
}

@mixin animation-timing-function($values...) {
    @if length($values) == 0 {
        $values: ease;
    }

    $vendors: -webkit-, '';
    @include _prefix(animation-timing-function, $values, $vendors);
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}
//====================================================================



@mixin appearance($value: normal) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(appearance, $value, $vendors);
}

@mixin backface-visibility($value: visible) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(backface-visibility, $value, $vendors);
}

@mixin background-image($values...) {
    @if length($values) == 0 {
        $values: none;
    } @else {
        $prefixes: $vendors;
        $vendors: -webkit-, '';

        @each $prefix in $vendors {
            @if index($prefixes, $prefix) {
                $to-top-left: str-replace('#{$values}', 'to top left', 'bottom right');
                $to-bottom-right: str-replace('#{$to-top-left}', 'to bottom right', 'top left');
                $to-top: str-replace('#{$values}', 'to top', 'bottom' );
                $to-bottom: str-replace('#{$to-top}', 'to bottom', 'top' );
                $to-left: str-replace('#{$to-bottom}', 'to left', 'right' );
                $to-right: str-replace('#{$to-left}', 'to right', 'left' );
                $linear-gradient: str-replace('#{$to-right}', 'linear-gradient', '#{$prefix}linear-gradient' );
                $radial-gradient: str-replace('#{$linear-gradient}', 'radial-gradient', '#{$prefix}radial-gradient' );
                $end: $radial-gradient;
                background-image: unquote($end);
            } @else {
                background-image: $values;
            }
        }
    }
}

@mixin background-size($values...) {
    @if length($values) == 0 {
        $values: auto;
    }

    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(background-size, $values, $vendors);
}

//Border Image
//====================================================================
@mixin border-image($value: none 100% 1 0 stretch) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(border-image, $value, $vendors);
}

@mixin border-image-outset($value: 0) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(border-image-outset, $value, $vendors);
}

@mixin border-image-repeat($value: stretch) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(border-image-repeat, $value, $vendors);
}

@mixin border-image-slice($value: 100%) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(border-image-slice, $value, $vendors);
}

@mixin border-image-source($value: none) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(border-image-source, $value, $vendors);
}

@mixin border-image-width($value: 1) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(border-image-width, $value, $vendors);
}
//====================================================================




//Border Radius
//====================================================================
@mixin border-radius($value: 0) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(border-radius, $value, $vendors);
}

@mixin border-top-radius($value: 0) {
    @include border-radius($value $value 0 0);
}

@mixin border-top-left-radius($value: 0) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(border-top-left-radius, $value, $vendors);
}

@mixin border-top-right-radius($value: 0) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(border-top-right-radius, $value, $vendors);
}

@mixin border-bottom-radius($value: 0) {
    @include border-radius(0 0 $value $value);
}

@mixin border-bottom-left-radius($value: 0) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(border-bottom-left-radius, $value, $vendors);
}

@mixin border-bottom-right-radius($value: 0) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(border-bottom-right-radius, $value, $vendors);
}

@mixin border-left-radius($value: 0) {
    @include border-radius($value 0 0 $value);
}

@mixin border-right-radius($value: 0) {
    @include border-radius(0 $value $value 0);
}

@mixin border-backslash-radius($value: 0) {
    @include border-radius($value 0 $value 0);
}

@mixin border-slash-radius($value: 0) {
    @include border-radius(0 $value 0 $value);
}
//====================================================================



@mixin box-shadow($values...) {
    @if length($values) == 0 {
        $values: none;
    }

    $vendors: -webkit-, -moz-, '';
    @include _prefix(box-shadow, $values, $vendors);
}

@mixin box-sizing($value: content-box) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(box-sizing, $value, $vendors);
}

@mixin break-inside($value: auto) {
    $vendors: -webkit-column-, page-, '';
    @include _prefix(break-inside, $value, $vendors);
}



//Columns
//====================================================================
@mixin columns($value: auto auto) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(columns, $value, $vendors);
}

@mixin column-count($value: auto) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-count, $value, $vendors);
}

@mixin column-fill($value: balance) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-fill, $value, $vendors);
}

@mixin column-gap($value: normal) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-gap, $value, $vendors);
}

@mixin column-rule($value: medium none transparent) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-rule, $value, $vendors);
}

@mixin column-rule-color($value: transparent) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-rule-color, $value, $vendors);
}

@mixin column-rule-style($value: none) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-rule-style, $value, $vendors);
}

@mixin column-rule-width($value: medium) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-rule-width, $value, $vendors);
}

@mixin column-span($value: 1) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-span, $value, $vendors);
}

@mixin column-width($value: auto) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(column-width, $value, $vendors);
}
//====================================================================



//Display
//====================================================================
@mixin display($value: block) {
    $vendors: '';

    @if $value == flex {
        display: -webkit-box;
        display: -ms-flexbox;
        display: -moz-box;
        $vendors: -webkit-, '';
    } @else if $value == inline-flex {
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: -moz-inline-box;
        $vendors: -webkit-, '';
    } @else if $value == grid {
        $vendors: -ms-, '';
    }

    @include _prefix(display, $value, $vendors, value);
}
//====================================================================



//Filter
//====================================================================
@mixin filter($value: none) {
    $vendors: -webkit-, '';
    @include _prefix(filter, $value, $vendors);
}

@mixin filter-blur($value) {
    @include filter(blur($value));
}

@mixin filter-brightness($value) {
    @include filter(brightness($value));
}

@mixin filter-contrast($value) {
    @include filter(contrast($value));
}

@mixin filter-drop-shadow($value) {
    @include filter(drop-shadow($value));
}

@mixin filter-grayscale($value) {
    @include filter(grayscale($value));
}

@mixin filter-hue-rotate($value) {
    @include filter(hue-rotate($value));
}

@mixin filter-invert($value) {
    @include filter(invert($value));
}

@mixin filter-opacity($value) {
    @include filter(opacity($value));
}

@mixin filter-sepia($value) {
    @include filter(sepia($value));
}

@mixin filter-saturate($value) {
    @include filter(saturate($value));
}
//====================================================================




//Flex
//====================================================================
@mixin flex($value: 0 1 auto) {
    $vendors: -webkit-box-, -moz-box-, -webkit-, -moz-, -ms-, '';
    @include _prefix(flex, $value, $vendors);
}

@mixin flex-basis($value: auto) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(flex-basis, $value, $vendors);
}

@mixin flex-direction($value: row) {
    -webkit-box-orient: $value;
    -moz-box-orient: $value;
    $vendors: -webkit-box-, -moz-box-, -webkit-, -moz-, '';
    @include _prefix(flex-direction, $value, $vendors);
}

@mixin flex-flow($value: row nowrap) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(flex-flow, $value, $vendors);
}

@mixin flex-glow($value: grow) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(flex-glow, $value, $vendors);
}

@mixin flex-shrink($value: 1) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(flex-shrink, $value, $vendors);
}

@mixin flex-wrap($value: nowrap) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(flex-wrap, $value, $vendors);
}
//====================================================================



@mixin flow-from($value: none) {
    $vendors: -webkit-, -ms-, '';
    @include _prefix(flow-from, $value, $vendors);
}

@mixin flow-into($value: none) {
    $vendors: -webkit-, -ms-, '';
    @include _prefix(flow-into, $value, $vendors);
}

@mixin font-face($name, $path, $weight: 400, $style: normal, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: (
        eot: "?",
        svg: "#" + str-replace($name, " ", "_")
    );

    $formats: (
        otf: "opentype",
        ttf: "truetype"
    );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

@mixin font-feature-settings($values...) {
    @if length($values) == 0 {
        $values: normal;
    }

    $vendors: -webkit-, -moz-, '';
    @include _prefix(font-feature-settings, $values, $vendors);
}

@mixin font-kerning($value: auto) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(font-kerning, $value, $vendors);
}



//Grid
//====================================================================
@mixin grid($value: none) {
    $vendors: -ms-, '';
    @include _prefix(grid, $value, $vendors);
}

@mixin grid-area($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-area, $value, $vendors);
}

@mixin grid-auto-columns($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-auto-columns, $value, $vendors);
}

@mixin grid-auto-flow($value: row) {
    $vendors: -ms-, '';
    @include _prefix(grid-auto-flow, $value, $vendors);
}

@mixin grid-auto-rows($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-auto-rows, $value, $vendors);
}

@mixin grid-column($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-column, $value, $vendors);
}

@mixin grid-column-end($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-column-end, $value, $vendors);
}

@mixin grid-column-gap($value: 0) {
    $vendors: -ms-, '';
    @include _prefix(grid-column-gap, $value, $vendors);
}

@mixin grid-column-start($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-column-start, $value, $vendors);
}

@mixin grid-gap($value: 0) {
    $vendors: -ms-, '';
    @include _prefix(grid-gap, $value, $vendors);
}

@mixin grid-row($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-row, $value, $vendors);
}

@mixin grid-row-end($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-row-end, $value, $vendors);
}

@mixin grid-row-gap($value: 0) {
    $vendors: -ms-, '';
    @include _prefix(grid-row-gap, $value, $vendors);
}

@mixin grid-row-start($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(grid-row-start, $value, $vendors);
}

@mixin grid-template($value: none) {
    $vendors: -ms-, '';
    @include _prefix(grid-template, $value, $vendors);
}

@mixin grid-template-areas($value: none) {
    $vendors: -ms-, '';
    @include _prefix(grid-template-areas, $value, $vendors);
}

@mixin grid-template-columns($value: none) {
    $vendors: -ms-, '';
    @include _prefix(grid-template-columns, $value, $vendors);
}

@mixin grid-template-rows($value: none) {
    $vendors: -ms-, '';
    @include _prefix(grid-template-rows, $value, $vendors);
}
//====================================================================



@mixin hyphens($value: none) {
    $vendors: -webkit-, -moz-, -ms-, '';
    @include _prefix(hyphens, $value, $vendors);
}



//Justify Content
//====================================================================
@mixin justify-content($value: start) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(justify-content, $value, $vendors);
}

@mixin justify-items($value: start) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(justify-items, $value, $vendors);
}

@mixin justify-self($value: start) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(justify-self, $value, $vendors);
}
//====================================================================



//Mask
//====================================================================
@mixin mask($values...) {
    @if length($values) == 0 {
        $values: none;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask, $values, $vendors);
}

@mixin mask-clip($values...) {
    @if length($values) == 0 {
        $values: border-box;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask-clip, $values, $vendors);
}

@mixin mask-composite($value: add) {
    $vendors: -webkit-, '';
    @include _prefix(mask-composite, $value, $vendors);
}

@mixin mask-image($values...) {
    @if length($values) == 0 {
        $values: none;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask-image, $values, $vendors);
}

@mixin mask-mode($values...) {
    @if length($values) == 0 {
        $values: alpha;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask-mode, $values, $vendors);
}

@mixin mask-origin($value: border-box) {
    $vendors: -webkit-, '';
    @include _prefix(mask-image, $value, $vendors);
}

@mixin mask-position($values) {
    @if length($values) == 0 {
        $values: center;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask-position, $values, $vendors);
}

@mixin mask-repeat($values) {
    @if length($values) == 0 {
        $values: no-repeat;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask-repeat, $values, $vendors);
}

@mixin mask-size($values) {
    @if length($values) == 0 {
        $values: auto;
    }

    $vendors: -webkit-, '';
    @include _prefix(mask-size, $values, $vendors);
}
//====================================================================



//Object
//====================================================================
@mixin object-fit($value: fill) {
    $vendors: -o-, '';
    @include _prefix(object-fit, $value, $vendors);
}

@mixin object-position($value: 50% 50%) {
    $vendors: -o-, '';
    @include _prefix(object-position, $value, $vendors);
}
//====================================================================



@mixin opacity($opacity) {
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity-ie})";
    opacity: $opacity;
}

@mixin order($value: 0) {
    $vendors: -webkit-, -moz-;
    @include _prefix(ordinal-group, $value, $vendors);
    $vendors: -ms-flex-, -webkit-, -moz-, '';
    @include _prefix(order, $value, $vendors);
}



//Perspective
//====================================================================
@mixin perspective($value: none) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(perspective, $value, $vendors);
}

@mixin perspective-origin($value: 50% 50%) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(perspective-origin, $value, $vendors);
}
//====================================================================



@mixin placeholder($color) {
    &::-webkit-input-placeholder {color: $color;}
    &::-moz-placeholder {color: $color;}
    &:-moz-placeholder {color: $color;}
    &:-ms-input-placeholder {color: $color;}
}

@mixin pointer-events($value: auto) {
    @include _prefix(pointer-events, $value, $vendors);
}

@mixin resize($value) {
    $vendors: -moz-, '';
    @include _prefix(resize, $value, $vendors);
    overflow: auto;
}

@mixin tab-size($value: 8) {
    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(tab-size, $value, $vendors);
}

@mixin text-align-last($value: auto) {
    $vendors: -moz-, '';
    @include _prefix(text-align-last, $value, $vendors);
}

@mixin text-combine-upright($value: auto) {
    $vendors: -webkit-, -ms-, '';
    @include _prefix(text-combine-upright, $value, $vendors);
}



//Text Decoration
//====================================================================
@mixin text-decoration-color($value: transparent) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(text-decoration-color, $value, $vendors);
}

@mixin text-decoration-line($value: none) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(text-decoration-line, $value, $vendors);
}

@mixin text-decoration-style($value: solid) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(text-decoration-style, $value, $vendors);
}
//====================================================================



//Text Emphasis
//====================================================================
@mixin text-emphasis($value: none transparent) {
    $vendors: -webkit-, '';
    @include _prefix(text-emphasis, $value, $vendors);
}

@mixin text-emphasis-color($value: transparent) {
    $vendors: -webkit-, '';
    @include _prefix(text-emphasis-color, $value, $vendors);
}

@mixin text-emphasis-position($value: over right) {
    $vendors: -webkit-, '';
    @include _prefix(text-emphasis-position, $value, $vendors);
}

@mixin text-emphasis-style($value: none) {
    $vendors: -webkit-, '';
    @include _prefix(text-emphasis-style, $value, $vendors);
}
//====================================================================



@mixin text-fill-color($value: transparent) {
    $vendors: -webkit-, -moz-, '';
    @include _prefix(text-fill-color, $value, $vendors);
}

@mixin text-orientation($value: mixed) {
    $vendors: -webkit-, '';
    @include _prefix(text-orientation, $value, $vendors);
}

@mixin text-overflow($value: clip) {
    $vendors: -ms-, -o-, '';
    @include _prefix(text-overflow, $value, $vendors);
}

@mixin touch-action($value: auto) {
    $vendors: -ms-, '';
    @include _prefix(touch-action, $value, $vendors);
}


//Transform
//====================================================================
@mixin transform($value: none) {
    @include _prefix(transform, $value, $vendors);
}

@mixin transform-origin($value: 50% 50% 0) {
    @include _prefix(transform-origin, $value, $vendors);
}

@mixin transform-style($value: flat) {
    @include _prefix(transform-style, $value, $vendors);
}

@mixin transform-matrix($values...) {
    @include transform(matrix($values...));
}

@mixin transform-perspective($n) {
    @include transform(perspective($n));
}

@mixin transform-rotate($value) {
    @include transform(rotate($value));
}

@mixin transform-rotateX($x) {
    @include transform(rotateX($x));
}

@mixin transform-rotateY($y) {
    @include transform(rotateY($y));
}

@mixin transform-rotateZ($z) {
    @include transform(rotateZ($z));
}

@mixin transform-rotate3d($value) {
    @include transform(rotate3d($value));
}

@mixin transform-scale($value) {
    @include transform(scale($value));
}

@mixin transform-scaleX($x) {
    @include transform(scaleX($x));
}

@mixin transform-scaleY($y) {
    @include transform(scaleY($y));
}

@mixin transform-scaleZ($z) {
    @include transform(scaleZ($z));
}

@mixin transform-scale3d($value) {
    @include transform(scale3d($value));
}

@mixin transform-skew($value) {
    @include transform(skew($value));
    @include backface-visibility(hidden);
}

@mixin transform-skewX($x) {
    @include transform(skewX($x));
    @include backface-visibility(hidden);
}

@mixin transform-skewY($y) {
    @include transform(skewY($y));
    @include backface-visibility(hidden);
}

@mixin transform-translate($value) {
    @include transform(translate($value));
}

@mixin transform-translateX($x) {
    @include transform(translateX($x));
}

@mixin transform-translateY($y) {
    @include transform(translateY($y));
}

@mixin transform-translateZ($z) {
    @include transform(translateZ($z));
}

@mixin transform-translate3d($value) {
    @include transform(translate($value));
}
//====================================================================





//Transition
//====================================================================
@mixin transition($values...) {
    @if length($values) == 0 {
        $values: all 0s ease 0s;
    }

    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(transition, $values, $vendors);
}

@mixin transition-delay($values...) {
    @if length($values) == 0 {
        $values: 0;
    }

    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(transition-delay, $values, $vendors);
}

@mixin transition-duration($values...) {
    @if length($values) == 0 {
        $values: 0;
    }

    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(transition-duration, $values, $vendors);
}

@mixin transition-property($values...) {
    @if length($values) == 0 {
        $values: all;
    }

    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(transition-property, $values, $vendors);
}

@mixin transition-timing-function($values...) {
    @if length($values) == 0 {
        $values: ease;
    }

    $vendors: -webkit-, -moz-, -o-, '';
    @include _prefix(transition-timing-function, $values, $vendors);
}

@mixin transition-cubic-bezier($values...) {
    @include transition-timing-function(cubic-bezier($values));
}
//====================================================================



@mixin user-select($value: auto) {
    @include _prefix(user-select, $value, $vendors);
}

@mixin word-break($value: normal) {
    $vendors: -ms-, '';
    @include _prefix(word-break, $value, $vendors);
}

@mixin word-wrap($value: normal) {
    overflow-wrap: $value;

    $vendors: -webkit-, -ms-, '';
    @include _prefix(word-wrap, $value, $vendors);

    @if $value == break-word {
        word-break: break-all;
    } @else {
        word-break: $value;
    }
}

@mixin writing-mode($value: horizontal-tb) {
    $vendors: -webkit-, -ms-, '';
    @include _prefix(writing-mode, $value, $vendors);
}